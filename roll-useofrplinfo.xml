<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [

<!ENTITY RFC6550 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6550.xml">
<!ENTITY RFC8138 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8138.xml">
<!ENTITY RFC8200 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8200.xml">
<!ENTITY RFC6553 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6553.xml">
<!ENTITY RFC6554 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6554.xml">
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC7102 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7102.xml">
<!ENTITY RFC4443 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4443.xml">
<!ENTITY RFC6775 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6775.xml">
<!ENTITY RFC2473 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2473.xml">
<!ENTITY RFC4302 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4302.xml">
<!ENTITY RFC4301 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4301.xml">
<!ENTITY RFC4303 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4303.xml">
<!ENTITY RFC7321 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7321.xml">
<!ENTITY RFC7416 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7416.xml">
<!ENTITY RFC4192 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4192.xml">
<!ENTITY RFC8180 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8180.xml">
<!--<!ENTITY I-D.thubert-roll-unaware-leaves SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.I-D.thubert-roll-unaware-leaves.xml"> -->
<!--<!ENTITY I-D.ietf-6tisch-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-architecture.xml">-->
<!ENTITY I-D.moore-iot-security-bcp SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.moore-iot-security-bcp.xml">
<!--<!ENTITY I-D.ietf-roll-dao-projection SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.ietf-roll-dao-projection.xml">-->
]>

<!--<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?> -->
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="no" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-roll-useofrplinfo-latest" ipr="trust200902" updates="6553, 6550, 8138">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

 <front>
   <!-- The abbreviated title is used in the page header - it is only necessary if the
        full title is longer than 39 characters -->

   <title abbrev="RPL-data-plane">Using RPL Option Type, Routing Header for Source Routes Â and IPv6-in-IPv6 encapsulation in the RPL Data Plane</title>

  <author  initials="M.I." surname="Robles" fullname="Maria Ines Robles">
     <organization abbrev="Aalto">Aalto University </organization>
    <address>
     <postal>
       <street>Innopoli</street>
       <city>Espoo</city>
       <code>02150</code>
       <country>Finland</country>
     </postal>
      <email>mariainesrobles@gmail.com</email>
    </address>
  </author>

  <author initials="M." surname="Richardson" fullname="Michael C. Richardson">
    <organization abbrev="SSW">Sandelman Software Works</organization>
     <address>
        <postal>
        <street>470 Dawson Avenue</street>
        <city>Ottawa</city>
        <region>ON</region>
        <code>K1Z 5V7</code>
        <country>CA</country>
        </postal>
        <email>mcr+ietf@sandelman.ca</email>
        <uri>http://www.sandelman.ca/mcr/</uri>
     </address>

  </author>
  <author initials="P." surname="Thubert" fullname="Pascal Thubert">
    <organization abbrev="Cisco">Cisco Systems, Inc</organization>
     <address>
        <postal>
        <street> Village d'Entreprises Green Side 400, Avenue de Roumanille</street>
        <city>Batiment T3</city>
        <region>Biot - Sophia Antipolis  </region>
        <code>06410</code>
        <country>France</country>
        </postal>
        <email>pthubert@cisco.com </email>
        <uri></uri>
     </address>

  </author>

  <date year="2018" />

   <area>Internet</area>

   <workgroup>ROLL Working Group</workgroup>

   <keyword>RPL Option</keyword>
   <keyword>6LoWPAN</keyword>
   <keyword>RFC 6553</keyword>

   <abstract>
      <t>
        This document looks at different data flows through LLN (Low-Power and Lossy Networks) where RPL
        (IPv6 Routing Protocol for Low-Power and Lossy Networks) is used to establish routing.
        The document enumerates the cases where RFC 6553 (RPL Option Type), RFC 6554 (Routing Header for Source Routes)
        and IPv6-in-IPv6 encapsulation is required in data plane.
        This analysis provides the basis on which to design efficient compression of these headers.
        This document updates RFC 6553 adding a change to the RPL Option Type. Additionally, this document updates
        RFC 6550 to indicate about this change and updates RFC8138 as well to consider the new Option Type
        when RPL Option is decompressed.
      </t>
   </abstract>
 </front>

 <middle>
          <section title="Introduction">
             <t>
               RPL (IPv6 Routing Protocol for Low-Power and Lossy Networks)
               <xref target="RFC6550"/> is a routing protocol for
                constrained networks. RFC 6553 <xref target="RFC6553"/>
                defines the "RPL option" (RPI), carried within the IPv6 Hop-by-Hop
                header to quickly identify inconsistencies (loops) in the routing topology.
                RFC 6554 <xref target="RFC6554"/> defines the "RPL Source Route Header" (RH3), an
                IPv6 Extension Header to deliver datagrams within a RPL
                routing domain, particularly in non-storing mode.
             </t>
             <t>
                These various items are referred to as RPL artifacts, and
                they are seen on all of the data-plane traffic that occurs in
                RPL routed networks; they do not in general appear on the RPL
                control plane traffic at all which is mostly hop-by-hop
                traffic (one exception being DAO messages in non-storing mode).
             </t>
             <t>
               It has become clear from attempts to do multi-vendor
               interoperability, and from a desire to compress as many of
               the above artifacts as possible that not all implementors
               agree when artifacts are necessary, or when they can be safely
               omitted, or removed.
             </t>
             <t>
               An interim meeting went through the 24 cases defined here to
               discover if there were any shortcuts, and this document is the
               result of that discussion.  This document clarifies examples
               that intend to illustrate the result of the normative
               language in RFC8200 and RFC6553.
               In other words, the examples are intended to be normative explanation
               of the results of executing that language.

             </t>
             <t>
               A Routing Header Dispatch for 6LoWPAN (6LoRH)(<xref target="RFC8138" />)
                defines a mechanism for compressing RPL Option information and Routing Header type 3
                <xref target="RFC6554"/>, as well as an efficient IPv6-in-IPv6 technique.
             </t>
             <section title="Overview">
               <t>
               The rest of the document is organized as follows: Section 2 describes the used terminology.
               Section 3 describes the updates to RFC6553, RFC6550 and RFC 8138.
               Section 4 provides the reference topology used for the uses cases.
               Section 5  describes the uses cases included.
               Section 6 describes the storing mode cases and section 7 the non-storing mode cases.
               Section 8 describes the operational considerations for the proposed change on RPL Option type.
               Section 9 depicts the 6LoRH Compression cases, section 10 the
               IANA considerations and then section 11 describe the security
               aspects.
               </t>
             </section>
          </section>
    <section title="Terminology and Requirements Language">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
        NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
        "MAY", and "OPTIONAL" in this document are to be interpreted as
        described in BCP 14
        <xref target="RFC2119" />,
        <xref target="RFC8174" /> when, and only when, they
        appear in all capitals, as shown here.
      </t>
        <t>
        Terminology defined in <xref target="RFC7102"/> applies to this document: LBR, LLN, RPL, RPL Domain and ROLL.
        </t>
        <t>
        RPL-node: A device which implements RPL, thus the device is RPL-aware.
	       Please note that the device can be found inside the LLN or outside LLN.
	        In this document a RPL-node which is a leaf of a DODAG is called RPL-aware-leaf.
        </t>
        <t>
        RPL-not-capable: A device which does not implement RPL, thus the device is not-RPL-aware.
	       Please note that the device can be found inside the LLN.
	      In this document a not-RPL-aware node which is a leaf of a DODAG is
        called not-RPL-aware-leaf.
        </t>

        <t>
          Flag Day:  A transition that involves have a network with different values of RPL Option Type.
          Thus the network do not work correclty.
          <!--   (from <xref target="RFC4192"/>). -->
        </t>
        <section title="hop-by-hop IPv6-in-IPv6 headers">
        <t>
          The term "hop-by-hop IPv6-in-IPv6" header refers to: adding a header
          that originates from a node to an adjacent node, using the
          addresses (usually the GUA or ULA, but could use the link-local addresses)
          of each node.  If the packet must traverse multiple hops, then it
          must be decapsulated at each hop, and then re-encapsulated again
          in a similar fashion.
        </t>
        </section>

       </section>

       <section  anchor="updateRFCs_section" title="Updates to RFC6553, RFC6550 and RFC 8138">

          <section title="Updates to RFC 6553">
          <t>
          This modification is required to be able to send, for example,
          IPv6 packets from a RPL-aware-leaf to a not-RPL-aware node through Internet (see <xref target="sm-Ral2i" />),
          without requiring IPv6-in-IPv6 encapsulation.
          </t>
          <t>
          <xref target="RFC6553"/> states as shown below, that in the Option Type field of the RPL Option
          header, the two high order bits MUST be set to '01' and the third bit is equal to '1'.
          The first two bits indicate that the IPv6 node MUST discard the packet
          if it doesn't recognize the option type,
          and the third bit indicates that the Option Data may change en route.
          The remaining bits serve as the option type.
          </t>
          <t>
          <figure title="Option Type in RPL Option." anchor="fig_RPIOption" align="center">
             <artwork> <![CDATA[

          Hex Value     Binary Value
                        act  chg  rest     Description        Reference
          ---------     ---  ---  -------  -----------------  ----------
            0x63         01    1   00011   RPL Option         [RFC6553]

          ]]></artwork></figure>
          </t>
          <t>
          Recent changes in
          <xref target="RFC8200"/> (section 4, page 8), states: "it is now
          expected that nodes along a packet's delivery path only examine and
          process the Hop-by-Hop Options header if explicitly configured to
          do so". Processing of the Hop-by-Hop Options header (by IPv6 intermediate nodes) is now optional,
          but if they are configured to process the header,
          and if such nodes encounter an option with the first two bits set to 01,
          they will drop the packet (if they conform to <xref target="RFC8200"/>).
          Host systems should do the same, irrespective of the configuration.
          </t>
          <t>
          Based on That, if an IPv6 (intermediate) node (RPL-not-capable) receives a packet with an
          RPL Option, it should ignore the HBH RPL option
          (skip over this option and continue processing the header). This is relevant, as it was mentioned previously, in the case that
          there is a flow from RPL-aware-leaf to Internet (see <xref target="sm-Ral2i" />).
          </t>
          <t>
           Thus, this document updates the Option Type field to:
           the two high order bits MUST be set to '00'
           and the third bit is equal to '1'.
           The first two bits indicate that the IPv6 node MUST
           skip over this option and continue processing the header
           (<xref target="RFC8200"/> Section 4.2)
           if it doesn't recognize the option type,
           and the third bit continues to be set to indicate that the Option
           Data may change en route. The remaining bits serve as the option type and remain as 0x3.
           This ensures that a packet that leaves the RPL domain of an LLN (or that
           leaves the LLN entirely) will not be discarded when it contains the
           [RFC6553] RPL Hop-by-Hop option known as RPI.
          </t>
          <t>
           This is a significant update to <xref target="RFC6553"/>. [RFCXXXX] represents this document.
          </t>
          <t>
          <figure title="Revised Option Type in RPL Option." anchor="fig_RPIOption_new" align="center">
             <artwork> <![CDATA[

          Hex Value     Binary Value
                        act  chg  rest     Description        Reference
          ---------     ---  ---  -------  -----------------  ----------
            0x23         00    1   00011   RPL Option         [RFCXXXX]

          ]]></artwork></figure>
          </t>
          <t>
            This change creates a flag day for existing networks which are
            currently using 0x63 as the RPI value.  A move to 0x23 will not
            be understood by those networks.  It is suggested that
            implementations accept both 0x63 and 0x23 when
            processing.
          </t>
          <t>
            When forwarding packets, implementations SHOULD use
            the same value as it was received (This is required because,
            RPI type code can not be changed by <xref target="RFC8200"/>).
            It allows to the network to be incrementally upgraded,
            and for the DODAG root to know which parts of the network are upgraded.
          </t>
          <t>
            When originating new packets,
            implementations SHOULD have an option to determine which value to
            originate with, this option is controlled by the DIO option
            described below.
          </t>
        <t>
          A network which is switching from straight 6lowpan compression
          mechanism to those described in
          <xref target="RFC8138" />
          will experience a flag day in the data compression anyway, and if
          possible this change can be deployed at the same time.
        </t>
        <t>
          The change of RPI option type from 0x63 to 0x23, makes all
          <xref target="RFC8200"/> Section 4.2 compliant nodes tolerant of the RPL artifacts.  There
          is therefore no longer a necessity to remove the artifacts when
          sending traffic to the Internet.  This change clarifies when
          to use an IPv6-in-IPv6 header, and how to address them:
          The Hop-by-Hop Options Header containing the RPI option SHOULD always
          be added when 6LRs originate packets (without IPv6-in-IPv6
          headers), and IPv6-in-IPv6 headers SHOULD always be added
          when a 6LR find that it needs to insert a Hop-by-Hop Options Header
          containing the RPI option.  The IPv6-in-IPv6 header is to
          be addressed to the
          RPL root when on the way up, and to the end-host when on the way down.
        </t>
        <t>
          Non-constrained uses of RPL are not in scope of this document, and
          applicability statements for those uses MAY provide different
          advice.  [[EDNOTE: is a reference to ANIMA ACP appropriate here?]]
        </t>
        <t>
          In the non-storing case, dealing with non-RPL aware leaf nodes
          is much easier as the 6LBR (DODAG root) has complete knowledge
          about the connectivity of all DODAG nodes, and all traffic flows
          through the root node.
        </t>
        <t>
          The 6LBR can recognize non-RPL aware leaf nodes because it will
          receive a DAO about that node from the 6LN immediately above that
          node.  This means that the non-storing mode case can avoid ever
          using hop-by-hop IPv6-in-IPv6 headers for traffic originating from
          the root to leafs.
        </t>
        <t>
          The non-storing mode case does not require the type change from
          0x63 to 0x23, as the root can always create the right packet.
          The type change does not adversely affect the non-storing case.
        </t>

<!--        <t>
          In general, any packet that leaves the RPL domain
          of an LLN (or leaves the LLN entirely) will NOT be discarded, when it has the <xref target="RFC6553" /> RPL Option
          Header known as the RPI or <xref target="RFC6554" /> SRH3 Extension Header (S)RH3.
          Because of <xref target="RFC8200"/> the RPI Hop-by-Hop option
          MAY be left in place even if the end host does not
          understand it.
        </t>
-->
        </section>
        <section title="Updates to RFC 8138">
          <t>
            RPI-6LoRH header provides a compressed form for the RPL RPI <xref
            target="RFC8138"/> in section 6. Â A node that is decompressing this header
            MUST decompress using the RPL RPI option type that is currently active: that
            is, a choice between 0x23 (new) and 0x63 (old). Â The node will know which to
            use based upon the presence of the DODAG Configuration Option described in
            the next section. E.g. If the network is in 0x23 mode (by DIO option),
            then it should be decompressed to 0x23.
        </t>
        <t>
          <xref target="RFC8138" /> section 7 documents how to compress
          the IPv6-in-IPv6 header.
        </t>
        <t>
          There are potential significant advantages to having a single
          code path that always processes IPv6-in-IPv6 headers with no options.
        </t>

          <t>
            In Storing Mode, for the examples of Flow from RPL-aware-leaf to
             non-RPL-aware-leaf and non-RPL-aware-leaf to non-RPL-aware-leaf
             comprise an IPv6-in-IPv6 and RPI compression headers. The use
             of the IPv6-in-IPv6 header is MANDATORY in this case, and
             it SHOULD be compressed with <xref target="RFC8138"/> section 7.
          </t>
          <t>
        <figure title="Critical IPv6-in-IPv6 (RPI)." anchor="rtghc"><artwork><![CDATA[

+--+-----+---+--------------+-----------+-----------+-----------+
|1 | 0|0 |TSE| 6LoRH Type 6 | Hop Limit | RPI-6LoRH |LOWPAN IPHC|
+--+-----+---+--------------+-----------+-----------+-----------+

        ]]></artwork></figure>

          </t>
          <!--    </section> -->
        </section>
        <section title="Updates to RFC 6550: Indicating the new RPI in the
                        DODAG Configuration Option Flag. ">
          <t>
            In order to avoid a Flag Day caused by lack of interoperation
            between new RPI (0x23) and old RPI (0x63) nodes, this section
            defines a flag in the DIO Configuration Option, to indicate when
            then new RPI value can be safely used. This means, the flag is going
	    to indicate the type of RPI that the network is using. Thus, when a
	    node join to a network will know which value to use. Without this
            there could be a mix of new nodes (which understand 0x23 and
            0x63), and old nodes (which understand 0x63 only). A new node
            would not know if it was safe to use 0x23.
          </t>
          <t>
            This is  done via a DODAG Configuration Option flag which will propogate
            through the network.  If the flag is received with a value zero
            (which is the default), then new nodes will remain in RFC6553
            Compatible Mode; originating traffic with the old-RPI (0x63) value.
          </t>
          <t>
            As stated in <xref target="RFC6550"/> the DODAG Configuration option is present in DIO messages.
            The DODAG Configuration option distributes configuration
            information.  It is generally static, and does not change within
            the DODAG.
            This information is configured at the DODAG root and distributed
            throughout the DODAG with the DODAG Configuration option.
            Nodes other than the DODAG root do not modify this information when
            propagating the DODAG Configuration option.
          </t>
          <t>
            The DODAG Configuration Option has a Flags field which is modified by this document.
            Currently, the DODAG Configuration Option in <xref target="RFC6550"/> is as follows. .
          </t>
          <t>
              Flags: The 4-bits remaining unused in the Flags field are reserved
              for flags. The field MUST be initialized to zero by the sender
              and MUST be ignored by the receiver.
          </t>
          <t>
           Bit number three of flag field in the DODAG Configuration option
           is to be used as follows:
          </t>
          <t>
        <figure title="DODAG Configuration Option Flag to indicate the RPI-flag-day." anchor="fig_RPIflagday2" align="center">
           <artwork> <![CDATA[

             +------------+-----------------+---------------+
             | Bit number |   Description   |   Reference   |
             +------------+-----------------+---------------+
             |      3     | RPI 0x23 enable | This document |
             +------------+-----------------+---------------+

          ]]></artwork></figure>
          </t>
          <t>
            In case of rebooting, the node does not remember if the flag is
            set, so DIO messages would be set with the flag unset until a DIO
            is received with the flag set.
          </t>
        </section>
   </section>

       <section title="Sample/reference topology">
                <t>
                A RPL network in general is composed of a 6LBR (6LoWPAN Border Router),
                Backbone Router (6BBR), 6LR (6LoWPAN Router) and 6LN (6LoWPAN
                Node) as leaf logically organized in a DODAG structure.
                (Destination Oriented Directed Acyclic Graph).
                </t>
                <t>
                RPL defines the RPL Control messages (control plane), a new
                ICMPv6 <xref target="RFC4443"/>  message with Type 155.
                DIS (DODAG Information Solicitation), DIO (DODAG Information Object)
                and DAO (Destination Advertisement Object) messages are
                all RPL Control messages but with different Code values.
                A RPL Stack is showed in Figure 5.
                </t>
                <t>
                RPL supports two modes of Downward traffic: in storing mode (RPL-SM),
                it is fully stateful; in non-storing (RPL-NSM), it is fully source
                routed. A RPL Instance is either fully storing or fully
                non-storing, i.e. a RPL Instance with a combination of
                storing and non-storing nodes is not supported with the
                current specifications at the time of writing this document.
                </t>
                <t>
             <figure title="RPL Stack." anchor="fig_RPLStack" align="center">
                <artwork><![CDATA[
+--------------+
| Upper Layers |
|              |
+--------------+
|   RPL        |
|              |
+--------------+
|   ICMPv6     |
|              |
+--------------+
|   IPv6       |
|              |
+--------------+
|   6LoWPAN    |
|              |
+--------------+
|   PHY-MAC    |
|              |
+--------------+
                ]]></artwork></figure>
        </t>
        <t>
             <figure title="A reference RPL Topology." anchor="fig_CommonTopology" align="center">
               <artwork><![CDATA[
                  +------------+
                  |  INTERNET  ----------+
                  |            |         |
                  +------------+         |
                                         |
                                         |
                                         |
                                       A |
                                   +-------+
                                   |6LBR   |
                       +-----------|(root) |-------+
                       |           +-------+       |
                       |                           |
                       |                           |
                       |                           |
                       |                           |
                       | B                         |C
                   +---|---+                   +---|---+
                   |  6LR  |                   |  6LR  |
         +-------->|       |--+             +---       ---+
         |         +-------+  |             |  +-------+  |
         |                    |             |             |
         |                    |             |             |
         |                    |             |             |
         |                    |             |             |
         | D                  |  E          |             |
       +-|-----+          +---|---+         |             |
       |  6LR  |          |  6LR  |         |             |
       |       |    +------       |         |             |
       +---|---+    |     +---|---+         |             |
           |        |         |             |             |
           |        |         +--+          |             |
           |        |            |          |             |
           |        |            |          |             |
           |        |            |        I |          J  |
        F  |        | G          | H        |             |
     +-----+-+    +-|-----+  +---|--+   +---|---+     +---|---+
     |  Raf  |    | ~Raf  |  | Raf  |   |  Raf  |     | ~Raf  |
     |  6LN  |    |  6LN  |  | 6LN  |   |  6LN  |     |  6LN  |
     +-------+    +-------+  +------+   +-------+     +-------+

               ]]>
             </artwork></figure>
          </t>
          <t>
            Figure 2 shows the reference RPL Topology for this document. The
            letters above the nodes are there so that
            they may be referenced in subsequent sections. In the figure,
            6LR represents a full router node.
            The 6LN is a RPL aware router, or host.
          </t>
          <t>
            But, the 6LN leaves (Raf - "RPL aware leaf"-)
            marked as (F, H and I) are RPL nodes with no children hosts.
          </t>
          <t>
	    The leafs marked as ~Raf "not-RPL aware leaf" (G and J) are
            devices which do not speak RPL at all (not-RPL-aware),
	    but uses Router-Advertisements, 6LowPAN DAR/DAC and
            efficient-ND only to participate in the network <xref target="RFC6775"/>.
	    In the document these leafs (G and J) are also refered to as
            an IPv6 node.
          </t>
          <t>
            The 6LBR ("A") in the figure is the root of the Global DODAG.
          </t>
       </section>


       <section title="Use cases">
         <t>
           In the data plane a combination of RFC6553, RFC6554 and
           IPv6-in-IPv6 encapsulation are going to be analyzed for a number of
           representative traffic flows.
        </t>
        <t>
          This document assumes that the LLN is using the no-drop RPI option (0x23).
        </t>
        <t>
          The uses cases describe the communication between RPL-aware-nodes,
          with the root (6LBR),  and with Internet.
          This document also describe the communication between nodes
          acting as leaves that do not understand RPL, but are part of the LLN.
          these nodes are named as not-RPL-aware-leaf.
          (e.g. <xref target="sm-nRal2root" /> Flow from not-RPL-aware-leaf to root)

          This document describes also how is the communication inside of the LLN
          when it has the final destination addressed outside of the LLN e.g. with
          destination to Internet.
          (e.g. <xref target="sm-nRal2i" /> Flow from not-RPL-aware-leaf to Internet)
        </t>
         <t>
             The uses cases comprise as follow:
         </t>
         <t>
             Interaction between Leaf and Root:
         </t>
         <t>
          <list>
             <t>
               RPL-aware-leaf to root
             </t>
             <t>
               root to RPL-aware-leaf
             </t>
             <t>
               not-RPL-aware-leaf to root
             </t>
             <t>
               root to not-RPL-aware-leaf
             </t>
           </list>
         </t>
         <t>
             Interaction between Leaf and Internet:
         </t>
         <t>
           <list>
             <t>
               RPL-aware-leaf to Internet
             </t>
             <t>
               Internet to RPL-aware-leaf
             </t>
             <t>
               not-RPL-aware-leaf to Internet
             </t>
             <t>
               Internet to not-RPL-aware-leaf
             </t>
           </list>
        </t>
         <t>
             Interaction between Leafs:
         </t>
           <t>
           <list>
             <t>
               RPL-aware-leaf to RPL-aware-leaf (storing and non-storing)
             </t>
             <t>
               RPL-aware-leaf to not-RPL-aware-leaf (non-storing)
             </t>
             <t>
               not-RPL-aware-leaf to RPL-aware-leaf (storing and non-storing)
             </t>
             <t>
               not-RPL-aware-leaf to not-RPL-aware-leaf (non-storing)
             </t>
           </list>
           </t>
          <t>
            This document is consistent with the rule that a Header cannot be
            inserted or removed on the fly inside an IPv6 packet that is
            being routed.
            This is a fundamental precept of the IPv6 architecture as
            outlined in <xref target="RFC8200" />.  Extensions may not
            be added or removed except by the sender or the receiver.
          </t>
          <t>
            However, unlike <xref target="RFC6553" />, the Hop-by-Hop Option
            Header used for the RPI artifact has the first two bits set to
            '00'.
            This means that the RPI artifact will be ignored when received by a host
            or router that does not understand that option
            ( Section 4.2 <xref target="RFC8200" />).
          </t>
          <t>
            This means that when the no-drop RPI option code 0x23 is used, a
            packet that leaves the RPL domain of an LLN (or that leaves the LLN
            entirely) will not be discarded when it contains the [RFC6553] RPL
            Hop-by-Hop option known as RPI. Thus, the RPI Hop-by-Hop option MAY
            be left in place even if the end host does not understand it.
          </t>
          <t>
            NOTE: There is some possible security risk when the RPI
            information is released to the Internet.  At this point this is
            a theoretical situation; no clear attack has been described.
            At worst, it is clear that the RPI option would  waste some
            network bandwidth when it escapes.  This is traded off against
            the savings in the LLN by not having to encapsulate the packet in
            order to remove the artifact.
          </t>
          <t>
            As the rank information in the RPI artifact is changed at each
            hop, it will typically be zero when it arrives at the DODAG
            root.  The DODAG root SHOULD force it to zero when passing the
            packet out to the Internet.  The Internet will therefore not see
            any SenderRank information.
          </t>
          <t>
            Despite being legal to leave the RPI artifact in place,
            an intermediate router that needs to add an extension header
            (SHR3 or RPI Option) MUST still encapsulate the packet in an
            (additional) outer IP header. The new header is placed after
            this new outer IP header.
         </t>
         <t>
           A corollory is that an SHR3 or RPI Option can only be removed by an
            intermediate router if it is placed in an encapsulating IPv6
            Header, which is addressed TO the intermediate router.
            When it does so, the whole encapsulating header must be
            removed. (A replacement may be added).  This sometimes can
            result in outer IP headers being addressed to the next hop
            router using link-local addresses.
          </t>
          <t>
            Both RPI and RH3 headers may be modified in very specific ways
            by routers on the path of the packet without the need to add to
            remove an encapsulating header.  Both headers were designed with
            this modification in
            mind, and both the RPL RH and the RPL option are marked mutable
            but recoverable: so an IPsec AH security header can be applied
            across these headers, but it can not secure the values which mutate.
          </t>

          <t>
            RPI SHOULD be present in every single RPL data packet.
            [[EDNOTE: can we increase this to MUST]]
          </t>

          <t>
            Prior to <xref target="RFC8138" />, there was significant
            interest in removing the RPI for downward flows in non-storing
            mode.  The exception covered a very small number of cases, and
            causes significant interoperability challenges, yet costed
            significant code and testing complexity.  The ability to compress
            the RPI down to three bytes or less removes much of the pressure
            to optimize this any further.
          </t>

          <t>
            In the tables present in this document, the term "RPL aware leaf"
            is has been shortened to
            "Raf", and "not-RPL aware leaf" has been shortened to "~Raf" to
            make the table fit in available space.
          </t>

          <t>
            The earlier examples are more extensive to make sure that the
            process is clear, while later examples are more concise.
          </t>
        </section>


        <section title="Storing mode">

          <t>
	         In storing mode (fully stateful), the sender can determine if
           the destination is inside the LLN by
            looking if the destination address is matched by the DIO's PIO option.
          </t>

          <t>
            The following table itemizes which headers are needed in each
            of the following scenarios. It indicate if an IP-in-IP header is to
            be inserted, and whether the destination address of the IP-in-IP
            header is the next hop, or the final target address. There are
            these possible situations: hop-by-hop necessary (indicated by
            "hop"), or final target address possible (indicated by "tgt"). Â In
            all cases hop by hop MAY be used rather than the final target
            address.
          </t>

          <t>
            In cases where no IPv6-in-IPv6 header is needed, the column is left
            blank.
          </t>
          <t>
            In all cases the RPI headers are needed, since it identifies
            inconsistencies (loops) in the routing topology.
            In all cases the RH3 is not needed because it is not used
            in storing mode.
          </t>

          <t>
            In each case, 6LR_i are the intermediate routers from source to destination.
            "1 &lt;= i &lt;= n", n is the number of routers (6LR)
            that the packet go through from source (6LN) to destination.
          </t>
          <t>
            The leaf can be a router 6LR or a host, both indicated as 6LN
            (see <xref target="fig_CommonTopology" />).
          </t>
           <t>
      <!-- Figure saved with the name IPv6-in-IPv6_encapsulation_in_Storing_mode.tgn -->
      <!-- to edit table, access to http://www.tablesgenerator.com/ and load the table  -->
       <figure title="IPv6-in-IPv6 encapsulation in Storing mode." anchor="fig_EncStoMode" align="center">
         <artwork><![CDATA[

+---------------------+--------------+----------+--------------+
| Interaction between |   Use Case   | IPv6-in-IPv6 | IPv6-in-IPv6 dst |
+---------------------+--------------+----------+--------------+
|                     |  Raf to root |    No    |      --      |
+                     +--------------+----------+--------------+
|     Leaf - Root     |  root to Raf |    No    |      --      |
+                     +--------------+----------+--------------+
|                     | root to ~Raf |    No    |      --      |
+                     +--------------+----------+--------------+
|                     | ~Raf to root |   MUST   |     root     |
+---------------------+--------------+----------+--------------+
|                     |  Raf to Int  |    No    |      --      |
+                     +--------------+----------+--------------+
|   Leaf - Internet   |  Int to Raf  |   MUST   |      Raf     |
+                     +--------------+----------+--------------+
|                     |  ~Raf to Int |   MUST   |     root     |
+                     +--------------+----------+--------------+
|                     |  Int to ~Raf |   MUST   |      hop     |
+---------------------+--------------+----------+--------------+
|                     |  Raf to Raf  |    No    |      --      |
+                     +--------------+----------+--------------+
|                     |  Raf to ~Raf |    No    |      --      |
+     Leaf - Leaf     +--------------+----------+--------------+
|                     |  ~Raf to Raf |   MUST   |      tgt     |
+                     +--------------+----------+--------------+
|                     | ~Raf to ~Raf |    Yes   |      hop     |
+---------------------+--------------+----------+--------------+


                         ]]></artwork></figure>
                          </t>
         <section title="Storing Mode: Interaction between Leaf and Root">

            <t>
             In this section is described the communication flow
             in storing mode (SM) between,
            </t>
            <t>
             <list>
               <t>
                 RPL-aware-leaf to root
               </t>
               <t>
                 root to RPL-aware-leaf
               </t>
               <t>
                 not-RPL-aware-leaf to root
               </t>
               <t>
                 root to not-RPL-aware-leaf
               </t>
             </list>
            </t>
              <!-- 5.1.  Example of Flow from RPL-aware-leaf to root !-->
               <section title="SM: Example of Flow from RPL-aware-leaf to root">

			                 <t>
                        In storing mode, RFC 6553 (RPI) is used
                        to send RPL Information instanceID and rank
                        information.
                        </t>
			                  <t>
                         As stated in Section 16.2 of <xref
                         target="RFC6550"/>  an RPL-aware-leaf node does not
                         generally issue DIO messages; a leaf node accepts
                         DIO messages from upstream.
                        (When the inconsistency in routing occurs, a leaf
                        node will generate a DIO with an infinite rank, to
                        fix it).  It may issue DAO and DIS
                        messages though it generally ignores DAO and DIS
                        messages.
                        </t>
                        <t>
                           In this case the flow comprises:
                        </t>
                        <t>
                        RPL-aware-leaf (6LN) --> 6LR_i --> root(6LBR)
                        </t>
                        <t>
                        For example, a communication flow could be: Node F --> Node E --> Node B --> Node A root(6LBR)
                        </t>
                        <t>
                        As it was mentioned in this document 6LRs, 6LBR are always
                        full-fledged RPL routers.
                        </t>
                         <t>
                           The 6LN (Node F) inserts the RPI header, and sends the
                           packet to 6LR (Node E) which decrements the rank in RPI and
                           sends the packet up. When the packet arrives at
                           6LBR (Node A), the RPI is removed and the packet is
                           processed.
                         </t>
                        <t>
                          No IPv6-in-IPv6 header is required.
                        </t>

                         <t> The RPI header can be removed by the 6LBR
                         because the packet is addressed to the 6LBR.  The
                         6LN must know that it is communicating with the 6LBR
                         to make use of this scenario.
                         The 6LN can know the address of the 6LBR because it
                         knows the address of the root via the DODAGID in the
                         DIO messages.
                         </t>

                        <texttable title="Storing: Summary of the use of headers from RPL-aware-leaf to root">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> --</c>
                                          <c> --</c>

                        </texttable>
               </section>

               <!-- section 6.2.  !-->

               <section title="SM: Example of Flow from root to RPL-aware-leaf">

                         <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                root (6LBR) --> 6LR_i --> RPL-aware-leaf (6LN)
                        </t>
                        <t>
                        For example, a communication flow could be: Node A root(6LBR) --> Node B --> Node D --> Node F
                        </t>
                        <t>
                                In this case the 6LBR inserts RPI header and
                                sends the packet down, the 6LR is going to
                                increment the rank in RPI (it examines the
                                instanceID to identify the right forwarding
                                table),
                                the packet
                                is processed in the 6LN and the RPI removed.
                        </t>
                        <t>
                          No IPv6-in-IPv6 header is required.
                        </t>

                        <texttable title="Storing: Summary of the use of headers from root to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI  </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

              <!-- section 6.3. !-->

               <section title="SM: Example of Flow from root to not-RPL-aware-leaf">
                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                                root (6LBR) --> 6LR_i --> not-RPL-aware-leaf (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Node A root(6LBR) --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          As the RPI extension can be ignored by the
                          not-RPL-aware leaf, this situation is identical to
                          the previous scenario.
                        </t>
                        <texttable title="Storing: Summary of the use of headers from root to not-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI  </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI (Ignored) </c>
                        </texttable>
               </section>

               <section anchor="sm-nRal2root" title="SM: Example of Flow from not-RPL-aware-leaf to root">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                not-RPL-aware-leaf (IPv6) --> 6LR_1 --> 6LR_i --> root (6LBR)
                        </t>
                        <t>
                        For example, a communication flow could be: Node G --> Node E --> Node B --> Node A root(6LBR)
                        </t>
                        <t>
                                When the packet arrives from IPv6 node (Node G) to
                                6LR_1 (Node E), the 6LR_1 will insert a RPI header, encapsuladed
                                in a IPv6-in-IPv6 header.  The IPv6-in-IPv6
                                header can be addressed to the next hop (Node B), or to
                                the root (Node A).  The root removes the header and processes
                                the packet.
                        </t>

                        <texttable title="Storing: Summary of the use of headers from not-RPL-aware-leaf to root">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI)</c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>
         </section>
        <section title=" Storing Mode: Interaction between Leaf and Internet">

                  <t>
                   In this section is described the communication flow
                   in storing mode (SM) between,
                   </t>
                 <t>
                   <list>
                     <t>
                       RPL-aware-leaf to Internet
                     </t>
                     <t>
                       Internet to RPL-aware-leaf
                     </t>
                     <t>
                       not-RPL-aware-leaf to Internet
                     </t>
                     <t>
                       Internet to not-RPL-aware-leaf
                     </t>
                   </list>
                 </t>

               <section  anchor="sm-Ral2i" title="SM: Example of Flow from RPL-aware-leaf to Internet">
                         <t>
                        RPL information from RFC 6553 may go out to
                        Internet as it will be ignored by nodes which have
                        not been configured to be RPI aware.
                         </t>
                         <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                RPL-aware-leaf (6LN) --> 6LR_i --> root (6LBR) --> Internet
                        </t>
                        <t>
                        For example, the communication flow could be: Node F --> Node D --> Node B --> Node A root(6LBR) --> Internet
                        </t>
                        <t>
                          No IPv6-in-IPv6 header is required.
                        </t>
                        <t>
                          Note: In this use case it is used a node as leaf, but this use case can be also
                          applicable to any RPL-node type (e.g. 6LR)
                        </t>

                        <texttable title="Storing: Summary of the use of headers from RPL-aware-leaf to Internet">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> RPI (Ignored) </c>
                        </texttable>
               </section>

               <!-- section 6.6 -->
               <section title="SM: Example of Flow from Internet to RPL-aware-leaf">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                Internet --> root (6LBR) --> 6LR_i --> RPL-aware-leaf (6LN)
                        </t>
                        <t>
                        For example, a communication flow could be: Internet --> Node A root(6LBR) --> Node B --> Node D --> Node F
                        </t>
                        <t>

                                When the packet arrives from Internet to 6LBR
                                the RPI header is added in a outer
                                IPv6-in-IPv6 header and sent to 6LR, which
                                modifies the rank in the RPI. When the packet
                                arrives at 6LN the RPI header is removed and the
                                packet processed.
                        </t>

                        <texttable title="Storing: Summary of the use of headers from Internet to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>


               <!-- section 6.6 -->
               <section anchor="sm-nRal2i" title="SM: Example of Flow from not-RPL-aware-leaf to Internet">
                 <t>
                   In this case the flow comprises:
                 </t>
                 <t>
                   not-RPL-aware-leaf (IPv6) --> 6LR_1 --> 6LR_i -->root (6LBR) --> Internet
                 </t>
                 <t>
                 For example, a communication flow could be: Node G --> Node E --> Node B --> Node A root(6LBR) --> Internet
                 </t>
                 <t>
                   The 6LR_1 (i=1) node will add an IPv6-in-IPv6(RPI) header addressed either
                   to the root, or hop-by-hop such that the root can remove
                   the RPI header before passing upwards. The IPv6-in-IPv6 addressed to the root cause less processing overhead.
                    On the other hand, with hop-by-hop the intermediate routers can check the routing tables for a better
                    routing path, thus it could be more efficient and faster. Implementation should decide wich approach to take.
                 </t>
                 <t>
                   The originating node will ideally leave the IPv6 flow
                   label as zero so that the packet can be better compressed through
                   the LLN. The 6LBR will set the flow label of the packet to a
                   non-zero value when sending to the Internet.
                 </t>

                 <texttable title="Storing: Summary of the use of headers from not-RPL-aware-leaf to Internet">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6 </ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LR_i [i=2,..,n]_</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c>IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> --</c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

                       <section title="SM: Example of Flow from Internet to non-RPL-aware-leaf">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>
                                Internet --> root (6LBR) --> 6LR_i --> not-RPL-aware-leaf (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Internet --> Node A root(6LBR) --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          The 6LBR will have to add an RPI header within an
                          IPv6-in-IPv6 header. The IPv6-in-IPv6 is addressed to
                          the not-RPL-aware-leaf, leaving the RPI inside.
                        </t>
                        <t>
                          Note that there is a requirement that the final
                          node be able to remove one or more IPv6-in-IPv6 headers
                          which are all addressed to it,
                          mentioned in <xref target="I-D.thubert-roll-unaware-leaves"/> :
                        </t>
                        <t>
                          "RPL data packets are often encapsulated using IP in IP.  The 6LN
                          MUST be able to decapsulate a packet when it is the destination of
                          the outer header and process correctly the inner header."
                        </t>
                        <t>
                          The 6LBR MAY set the flow label on the inner IPv6-in-IPv6
                          header to zero in order to aid in compression.
                       </t>
                        <texttable title="Storing: Summary of the use of headers from Internet to non-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c>  IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c>-- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI (Ignored) </c>
                        </texttable>
               </section>
      </section>
      <section title="Storing Mode: Interaction between Leaf and Leaf">
        <t>
         In this section is described the communication flow
         in storing mode (SM) between,
        </t>
        <t>
         <list>
           <t>
             RPL-aware-leaf to RPL-aware-leaf
           </t>
           <t>
             RPL-aware-leaf to not-RPL-aware-leaf
           </t>
           <t>
             not-RPL-aware-leaf to  RPL-aware-leaf
           </t>
           <t>
             not-RPL-aware-leaf to not-RPL-aware-leaf
           </t>
         </list>
       </t>
               <!-- section 6.9 -->
               <section anchor="storingraftoraf" title="SM: Example of Flow from RPL-aware-leaf to RPL-aware-leaf">
                 <t>
                   In <xref target="RFC6550"/> RPL allows a simple one-hop
                   optimization for both storing and non-storing
                   networks.
                   A node may send a packet destined to a one-hop
                   neighbor directly to that node. See section 9 in <xref
                   target="RFC6550"/>.
                 </t>
                 <t>
                   When the nodes are not directly connected, then in storing
                   mode, the flow comprises:
                 </t>
                 <t>
                   6LN --> 6LR_ia --> common parent (6LR_x) --> 6LR_id -->  6LN
                 </t>
                 <t>
                 For example, a communication flow could be: Node F --> Node D --> Node B --> Node E --> Node H
                 </t>
                 <t>
                   6LR_ia (Node D) are the intermediate routers from source to the common parent (6LR_x) (Node B)
                   In this case, "1 &lt;= ia &lt;= n", n is the number of routers (6LR)
                   that the packet go through from 6LN (Node F) to the common parent (6LR_x).
                 </t>
                 <t>
                   6LR_id (Node E) are the intermediate routers from the common parent (6LR_x) (Node B) to destination 6LN (Node H).
                   In this case, "1 &lt;= id &lt;= m", m is the number of routers (6LR)
                   that the packet go through from the common parent (6LR_x)  to destination 6LN.
                 </t>
                 <t>
                   It is assumed that the two nodes are in the same RPL Domain
                   (that they share the same DODAG root). At the
                   common parent (Node B), the direction of RPI is changed (from
                   increasing to decreasing the rank).
                 </t>
                 <t>
                   While the 6LR nodes will update the RPI, no node needs to
                   add or remove the RPI, so no IPv6-in-IPv6 headers are
                   necessary.
                   This may be done regardless of where the destination is,
                   as the included RPI will be ignored by the receiver.
                 </t>

                 <texttable title="Storing: Summary of the use of headers for RPL-aware-leaf to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN src</ttcol>
                                          <ttcol> 6LR_ia</ttcol>
                                          <ttcol> 6LR_x (common parent)</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> 6LN dst</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI</c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI  </c>
                                          <c> RPI  </c>
                                          <c> RPI  </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

               <!-- section 6.10 -->
               <section anchor="storingraftononraf" title="SM: Example of Flow from RPL-aware-leaf to non-RPL-aware-leaf">
                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                         6LN --> 6LR_ia --> common parent (6LR_x) --> 6LR_id -->  not-RPL-aware 6LN (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Node F --> Node D --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          6LR_ia are the intermediate routers from source (6LN) to the common parent (6LR_x)
                          In this case, "1 &lt;= ia &lt;= n", n is the number of routers (6LR)
                          that the packet go through from 6LN to the common parent (6LR_x).
                        </t>
                        <t>
                          6LR_id (Node E) are the intermediate routers from the common parent (6LR_x) (Node B) to destination not-RPL-aware 6LN (IPv6) (Node G).
                          In this case, "1 &lt;= id &lt;= m", m is the number of routers (6LR)
                          that the packet go through from the common parent (6LR_x)  to destination 6LN.
                        </t>
                        <t>
                          This situation is identical to the previous situation
                          <xref target="storingraftoraf" />
                        </t>
                 <texttable title="Storing: Summary of the use of headers for RPL-aware-leaf to non-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN src</ttcol>
                                          <ttcol> 6LR_ia</ttcol>
                                          <ttcol> 6LR_x(common parent)</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI  </c>
                                          <c> RPI </c>
                                          <c> RPI  </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI(Ignored) </c>
                        </texttable>
               </section>

               <section anchor="storingnotraftoraf" title="SM: Example of Flow from not-RPL-aware-leaf to RPL-aware-leaf">
                 <t>
                   In this case the flow comprises:
                 </t>
                 <t>
                   not-RPL-aware 6LN (IPv6) --> 6LR_ia --> common parent (6LR_x) --> 6LR_id -->  6LN
                 </t>
                 <t>
                 For example, a communication flow could be: Node G --> Node E --> Node B --> Node D --> Node F
                 </t>
                 <t>
                   6LR_ia (Node E) are the intermediate routers from source (not-RPL-aware 6LN (IPv6)) (Node G) to the common parent (6LR_x) (Node B).
                   In this case, "1 &lt;= ia &lt;= n", n is the number of routers (6LR)
                   that the packet go through from source to the common parent.
                 </t>
                 <t>
                   6LR_id (Node D) are the intermediate routers from the common parent (6LR_x) (Node B) to destination 6LN (Node F).
                   In this case, "1 &lt;= id &lt;= m", m is the number of routers (6LR)
                   that the packet go through from the common parent (6LR_x)  to destination 6LN.
                 </t>
                 <t>
                   The 6LR_ia (ia=1) (Node E) receives the packet from the the IPv6 node (Node G) and
                   inserts and the RPI header encapsulated in IPv6-in-IPv6 header.
                   The IPv6-in-IPv6 header is addressed to the destination 6LN (Node F).
                 </t>
                 <texttable title="Storing: Summary of the use of headers from not-RPL-aware-leaf to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <ttcol> 6LR_ia</ttcol>
                                          <ttcol> common parent (6LRx)</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> --</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

               <section title="SM: Example of Flow from not-RPL-aware-leaf to not-RPL-aware-leaf">
                 <t>
                   In this case the flow comprises:
                 </t>
                 <t>
                   not-RPL-aware 6LN (IPv6 src)--> 6LR_1--> 6LR_ia --> 6LR_id --> not-RPL-aware 6LN (IPv6 dst)
                 </t>
                 <t>
                 For example, a communication flow could be: Node G --> Node E --> Node B --> Node A (root) --> Node C --> Node J
                 </t>
                 <t>
                   Internal nodes 6LR_ia (e.g: Node E or Node B) are the
                   intermediate routers from the not-RPL-aware source (Node G)
                   to the root (6LBR) (Node A).
                   In this case, "1 &lt; ia &lt;= n", n is the number of routers (6LR)
                   that the packet go through from IPv6 src to the root.
                 </t>
                 <t>
                   6LR_id (C) are the intermediate routers from the root
                   (Node A) to the destination Node J.
                   In this case, "1 &lt;= id &lt;= m", m is the number of routers (6LR)
                   that the packet go through from the root  to destination (IPv6 dst).
                 </t>
                 <t>
                   Note that this flow is identical to <xref target="storingnotraftoraf" />,
                   except for where the IPv6-in-IPv6 header is inserted.
                 </t>
                 <t>
                   The 6LR_1 (Node E) receives the packet from the the
                   IPv6 node (Node G) and inserts  the RPI header (RPIa),
                   encapsulated in an IPv6-in-IPv6 header.
                   The IPv6-in-IPv6 header is addressed to the final
                   destination.
                 </t>
                 <texttable title="Storing: Summary of the use of headers from not-RPL-aware-leaf to non-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6 src</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LR_ia</ttcol>
                                          <ttcol> 6LR_m</ttcol>
                                          <ttcol> IPv6 dst</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> --</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI)</c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>
       </section>
  </section>

       <section title="Non Storing mode">

         <t>
          In Non Storing Mode (Non SM) (fully source routed),
          the 6LBR (DODAG root) has complete knowledge about the
          connectivity of all DODAG nodes, and all traffic flows
          through the root node. Thus, there is no need for all nodes to
          know about the existence of non-RPL aware nodes.
          Only the 6LBR needs to act if compensation is necessary for non-RPL
          aware receivers.
         </t>
         <t>
           The following table summarizes what headers are needed in the following
           scenarios, and indicates when the RPI, RH3 and IPv6-in-IPv6 header
           are to be inserted.  There are these possible situations:
           target destination address possible (indicated by "tgt"), to a 6LR, to a 6LN or to the root.
           In cases where no IPv6-in-IPv6 header is needed, the column is left blank.
         </t>
         <t>
           The leaf can be a router 6LR or a host, both indicated as 6LN (Figure 3). In the Figure they
           (1) indicates a 6tisch case <xref target="RFC8180"/>, where the
           instanceID portion of the RPI header may still be needed to
           pick an appropriate priority or channel at each hop.
         </t>
         <t>
         <!-- Figure saved with the name Headers_non_stroing_RPI_RH3_IPv6-in-IPv6ncapsulation.tgn -->
         <!-- to edit table, access to http://www.tablesgenerator.com/ and load the table  -->
          <figure title="Headers needed in Non-Storing mode: RPI, RH3, IPv6-in-IPv6 encapsulation." anchor="fig_table_non-storing" align="center">

            <artwork><![CDATA[
+-----------------+--------------+-----+-----+----------+----------+
|   Interaction   |   Use Case   | RPI | RH3 | v6-in-v6 | v6-in-v6 |
|      between    |              |     |     |          |    dst   |
+-----------------+--------------+-----+-----+----------+----------+
|                 |  Raf to root | Yes | No  |    No    |    --    |
+                 +--------------+-----+-----+----------+----------+
|   Leaf - Root   |  root to Raf | Opt | Yes |    No    |    --    |
+                 +--------------+-----+-----+----------+----------+
|                 | root to ~Raf |no(1)| Yes |   MUST   |    6LR   |
+                 +--------------+-----+-----+----------+----------+
|                 | ~Raf to root | Yes | No  |   MUST   |   root   |
+-----------------+--------------+-----+-----+----------+----------+
|                 |  Raf to Int  | Yes | No  |   MUST   |   root   |
+                 +--------------+-----+-----+----------+----------+
| Leaf - Internet |  Int to Raf  |no(1)| Yes |   MUST   |    tgt   |
+                 +--------------+-----+-----+----------+----------+
|                 |  ~Raf to Int | Yes | No  |   MUST   |   root   |
+                 +--------------+-----+-----+----------+----------+
|                 |  Int to ~Raf |no(1)| Yes |   MUST   |    6LR   |
+-----------------+--------------+-----+-----+----------+----------+
|                 |  Raf to Raf  | Yes | Yes |   MUST   | root/tgt |
+                 +--------------+-----+-----+----------+----------+
|                 |  Raf to ~Raf | Yes | Yes |   MUST   | root/6LR |
+   Leaf - Leaf   +--------------+-----+-----+----------+----------+
|                 |  ~Raf to Raf | Yes | Yes |   MUST   | root/6LN |
+                 +--------------+-----+-----+----------+----------+
|                 | ~Raf to ~Raf | Yes | Yes |   MUST   | root/6LR |
+-----------------+--------------+-----+-----+----------+----------+

(1)-6tisch networks may need the RPI information.

]]></artwork></figure>
          </t>

          <section title="Non-Storing Mode: Interaction between Leaf and Root">

             <t>
              In this section is described the communication flow
              in Non Storing Mode (Non-SM) between,
             </t>
             <t>
              <list>
                <t>
                  RPL-aware-leaf to root
                </t>
                <t>
                  root to RPL-aware-leaf
                </t>
                <t>
                  not-RPL-aware-leaf to root
                </t>
                <t>
                  root to not-RPL-aware-leaf
                </t>
              </list>
             </t>

               <section title="Non-SM: Example of Flow from RPL-aware-leaf to root">
                 <t>
                   In non-storing mode the leaf node uses default
                   routing to send traffic to the root. The RPI header
                   contains the rank information, which is used to
                   avoid/detect loops.
                 </t>

                 <t>
                   RPL-aware-leaf (6LN) --> 6LR_i --> root(6LBR)
                 </t>
                 <t>
                   For example, a communication flow could be: Node F --> Node D --> Node B --> Node A (root)
                 </t>
                 <t>
                   6LR_i are the intermediate routers from source to destination.
                   In this case, "1 &lt;= i &lt;= n", n is the number of routers (6LR)
                   that the packet go through from source (6LN) to destination (6LBR).
                 </t>
                 <t>
                   This situation is the same case as storing mode.
                 </t>

                        <texttable title="Non Storing: Summary of the use of headers from RPL-aware-leaf to root">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> --</c>
                                          <c> --</c>

                        </texttable>
               </section>

               <section anchor="nsroottoraf" title=" Non-SM: Example of Flow from root to RPL-aware-leaf">
                 <t>
                   In this case the flow comprises:
                 </t>
                 <t>

                         root (6LBR) --> 6LR_i --> RPL-aware-leaf (6LN)
                 </t>
                 <t>
                 For example, a communication flow could be: Node A (root) --> Node B --> Node D --> Node F
                 </t>
                 <t>
                   6LR_i are the intermediate routers from source to destination.
                   In this case, "1 &lt;= i &lt;= n", n is the number of routers (6LR)
                   that the packet go through from source (6LBR) to destination (6LN).
                 </t>
                 <t>
                   The 6LBR inserts an RH3, and an RPI header.
                   No IPv6-in-IPv6 header is necessary as the traffic
                   originates with an RPL aware node, the 6LBR.
                   The destination is known to RPL-aware because, the root
                   knows the whole topology in non-storing mode.
                 </t>

                        <texttable title="Non Storing: Summary of the use of headers from root to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI, RH3</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RH3,RPI </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c>RH3 </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

               <section title=" Non-SM: Example of Flow from root to not-RPL-aware-leaf">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>
                                root (6LBR) --> 6LR_i --> not-RPL-aware-leaf (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Node A (root) --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt;= i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from source (6LBR) to destination (IPv6).
                        </t>
                        <t>
                          In 6LBR the RH3 is added, it is modified at each
                          intermediate 6LR (6LR_1 and so on) and
                          it is fully consumed in the last 6LR (6LR_n), but left there.
                          If RPI is left by the previous 6LR, then
                          the IPv6 node which does not understand the RPI,
                          will ignore it (following RFC8200), thus
                          encapsulation is not necessary.
                          Due the complete knowledge of the topology at the
                          root,
                          the 6LBR may optionally address the IPv6-in-IPv6 header
                          to the last 6LR, such that it is removed prior to
                          the IPv6 node.  Please see <xref
                          target="notrplaware" /> for clarification of use of
                          IPv6-in-IPv6 encapsulation.
                        </t>

                               <texttable title=" Non Storing: Summary of the use of headers from root to not-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_i(i=1)</ttcol>
                                          <ttcol> 6LR_n(i=n)</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI, RH3 </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> RH3 </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI, RH3 </c>
                                          <c> RPI, RH3</c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from not-RPL-aware-leaf to root">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                not-RPL-aware-leaf (IPv6) --> 6LR_1 --> 6LR_i --> root (6LBR)
                        </t>
                        <t>
                        For example, a communication flow could be: Node G --> Node E --> Node B --> Node A (root)
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt; i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from source (IPv6) to destination (6LBR).
                          For example, 6LR_1 (i=1) is the router that receives the packets from the
                          IPv6 node.
                        </t>
                        <t>
                          In this case the RPI is added by the first
                          6LR (6LR1) (Node E), encapsulated in an IPv6-in-IPv6 header, and is
                          modified in the following 6LRs.  The RPI and
                          entire packet is consumed by the root.
                        </t>

                        <texttable title="Non Storing: Summary of the use of headers from not-RPL-aware-leaf to root">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6(RPI) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>
            </section>

               <section title="Non-Storing Mode: Interaction between Leaf and Internet">

                  <t>
                   This section will describe the communication flow in Non Storing Mode (Non-SM) between:
                  </t>
                  <t>
                   <list>
                     <t>
                       RPL-aware-leaf to Internet
                     </t>
                     <t>
                       Internet to RPL-aware-leaf
                     </t>
                     <t>
                       not-RPL-aware-leaf to Internet
                     </t>
                     <t>
                       Internet to not-RPL-aware-leaf
                     </t>
                   </list>
                  </t>

               <section title="Non-SM: Example of Flow from RPL-aware-leaf to Internet">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>
                                RPL-aware-leaf (6LN) --> 6LR_i --> root (6LBR) --> Internet
                        </t>
                        <t>
                        For example, a communication flow could be: Node F --> Node D --> Node B --> Node A --> Internet
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt;= i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from source (6LN) to 6LBR.
                        </t>
                        <t>
                                This case is identical to storing-mode case.
                        </t>
                        <t>
                          The IPv6 flow label should be set to zero to aid
                          in compression, and the 6LBR will set it to a
                          non-zero value when sending towards the Internet.
                        </t>

                        <texttable title="Non Storing: Summary of the use of headers from RPL-aware-leaf to Internet">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <ttcol> 6LR_i</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <c> Inserted headers</c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> RPI </c>
                                          <c> RPI (Ignored) </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from Internet to RPL-aware-leaf">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                Internet --> root (6LBR) --> 6LR_i --> RPL-aware-leaf (6LN)
                        </t>
                        <t>
                        For example, a communication flow could be: Internet --> Node A (root) --> Node B --> Node D --> Node F
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt;= i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from 6LBR to destination(6LN).
                        </t>
                        <t>
                          The 6LBR must add an RH3 header.  As the 6LBR will
                          know the path and address of the target node, it can
                          address the IPv6-in-IPv6 header to that node.
                          The 6LBR will zero the flow label upon entry in
                          order to aid compression.
                        </t>

                        <texttable title="Non Storing: Summary of the use of headers from Internet to RPL-aware-leaf">
                          <ttcol> Header</ttcol>
                          <ttcol> Internet</ttcol>
                          <ttcol> 6LBR</ttcol>
                          <ttcol> 6LR_i</ttcol>
                          <ttcol> 6LN</ttcol>
                          <c> Inserted headers</c>
                          <c> -- </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI)</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> Removed headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI)</c>
                          <c> Re-added headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> Modified headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI)</c>
                          <c> -- </c>
                          <c> Untouched headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from not-RPL-aware-leaf to Internet">
                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>
                          not-RPL-aware-leaf (IPv6) --> 6LR_1 --> 6LR_i -->root (6LBR) --> Internet
                        </t>
                        <t>
                        For example, a communication flow could be: Node G --> Node E --> Node B --> Node A --> Internet
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt; i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from source(IPv6) to 6LBR. e.g 6LR_1 (i=1).
                        </t>
                        <t>
                                In this case the flow label is recommended to
                                be zero in the IPv6 node. As RPL headers are
                                added in the IPv6 node, the first 6LR (6LR_1) will
                                add an RPI header inside a new IPv6-in-IPv6 header.
                                The IPv6-in-IPv6 header will be addressed to the
                                root.  This case is identical to the
                                storing-mode case (see <xref target="sm-nRal2i" />).
                        </t>

                        <texttable title="Non Storing: Summary of the use of headers from not-RPL-aware-leaf to Internet">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LR_i [i=2,..,n]_</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> Internet</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI)</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI) </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from Internet to not-RPL-aware-leaf">

                        <t>
                                In this case the flow comprises:
                        </t>
                        <t>

                                Internet --> root (6LBR) --> 6LR_i --> not-RPL-aware-leaf (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Internet --> Node A (root) --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          6LR_i are the intermediate routers from source to destination.
                          In this case, "1 &lt; i &lt;= n", n is the number of routers (6LR)
                          that the packet go through from 6LBR to not-RPL-aware-leaf (IPv6).
                        </t>

                        <t>
                          The 6LBR must add an RH3 header inside an IPv6-in-IPv6
                          header.
                          The 6LBR will know the path, and will recognize
                          that the final node is not an RPL capable node as
                          it will have received the connectivity DAO from the
                          nearest 6LR.  The 6LBR can therefore make the IPv6-in-IPv6
                          header destination be the last 6LR.
                          The 6LBR will set to zero the flow label upon entry in
                          order to aid compression.
                        </t>

                        <texttable title=" NonStoring: Summary of the use of headers from Internet to non-RPL-aware-leaf">
                          <ttcol> Header</ttcol>
                          <ttcol> Internet</ttcol>
                          <ttcol> 6LBR</ttcol>
                          <ttcol> 6LR_1</ttcol>
                          <ttcol> 6LR_i(i=2,..,n)</ttcol>
                          <ttcol> IPv6</ttcol>
                          <c> Inserted headers</c>
                          <c> -- </c>
                          <c> IPv6-in-IPv6 (RH3, RPI) </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> Removed headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI) </c>
                          <c> -- </c>
                          <c> Re-added headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> Modified headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI) </c>
                          <c>  IPv6-in-IPv6 (RH3,RPI) </c>
                          <c> -- </c>
                          <c> Untouched headers</c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> -- </c>
                          <c> RPI </c>
                        </texttable>
               </section>

             </section>

                <section title="Non-Storing Mode: Interaction between Leafs">

                   <t>
                    In this section is described the communication flow
                    in Non Storing Mode (Non-SM) between,
                   </t>
                   <t>
                    <list>
                      <t>
                        RPL-aware-leaf to RPL-aware-leaf
                      </t>
                      <t>
                        RPL-aware-leaf to not-RPL-aware-leaf
                      </t>
                      <t>
                        not-RPL-aware-leaf to RPL-aware-leaf
                      </t>
                      <t>
                        not-RPL-aware-leaf to not-RPL-aware-leaf
                      </t>
                    </list>
                   </t>

               <section title="Non-SM: Example of Flow from RPL-aware-leaf to RPL-aware-leaf">
                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                         6LN src --> 6LR_ia --> root (6LBR) --> 6LR_id -->  6LN dst
                        </t>
                        <t>
                        For example, a communication flow could be: Node F --> Node D --> Node B --> Node A (root) --> Node B --> Node E --> Node H
                        </t>
                        <t>
                          6LR_ia are the intermediate routers from source to the root
                          In this case, "1 &lt;= ia &lt;= n", n is the number of routers (6LR)
                          that the packet go through from 6LN to the root.
                        </t>
                        <t>
                          6LR_id are the intermediate routers from the root to the destination.
                          In this case, "1 &lt;= ia &lt;= m", m is the number of the
                          intermediate routers (6LR).
                        </t>
                        <t>
                          This case involves only nodes in same RPL Domain.
                          The originating node will add an RPI header to the
                          original packet, and send the packet upwards.
                        </t>
                        <t>
                          The originating node SHOULD put the RPI into an IPv6-in-IPv6
                          header addressed to the root, so that the 6LBR can
                          remove that header.  If it does not, then
                          additional resources are wasted on the way down to
                          carry the useless RPI option.
                        </t>
                        <t>
                          The 6LBR will need to insert an RH3 header, which
                          requires that it add an IPv6-in-IPv6 header.  It SHOULD be
                          able to remove the RPI, as it was contained in an
                          IPv6-in-IPv6 header addressed to it.  Otherwise, there MAY
                          be an RPI header buried inside the inner IP header,
                          which should get ignored.
                        </t>

                 <t>
                   Networks that use the RPL P2P extension <xref target="RFC6997" />
                   are essentially non-storing DODAGs and fall into this
                   scenario or scenario <xref target="nsroottoraf"/>, with
                   the originating node acting as 6LBR.
                 </t>


                 <texttable title="Non Storing: Summary of the use of headers for RPL-aware-leaf to RPL-aware-leaf">
                   <ttcol> Header</ttcol>
                   <ttcol> 6LN src</ttcol>
                   <ttcol> 6LR_ia </ttcol>
                   <ttcol> 6LBR</ttcol>
                   <ttcol> 6LR_id</ttcol>
                   <ttcol> 6LN dst</ttcol>
                   <c> Inserted headers</c>
                   <c> IPv6-in-IPv6 (RPI1) </c>
                   <c> -- </c>
                   <c> IPv6-in-IPv6 (RH3->6LN, opt RPI2) </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> Removed headers</c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> IPv6-in-IPv6 (RPI1) </c>
                   <c> -- </c>
                   <c> IPv6-in-IPv6 (RH3, opt RPI2)</c>
                   <c> Re-added headers</c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> Modified headers</c>
                   <c> -- </c>
                   <c> RPI1 </c>
                   <c> -- </c>
                   <c> RPI2 </c>
                   <c> -- </c>
                   <c> Untouched headers</c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                   <c> -- </c>
                 </texttable>
               </section>

               <section title="Non-SM: Example of Flow from RPL-aware-leaf to not-RPL-aware-leaf">
                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                         6LN --> 6LR_ia --> root (6LBR) --> 6LR_id -->  not-RPL-aware (IPv6)
                        </t>
                        <t>
                        For example, a communication flow could be: Node F --> Node D --> Node B --> Node A (root) --> Node B --> Node E --> Node G
                        </t>
                        <t>
                          6LR_ia are the intermediate routers from source to the root
                          In this case, "1 &lt;= ia &lt;= n", n is the number of intermediate routers (6LR)
                        </t>
                        <t>
                          6LR_id are the intermediate routers from the root to the destination.
                          In this case, "1 &lt;= ia &lt;= m", m is the number of the
                          intermediate routers (6LR).
                        </t>
                        <t>
                          As in the previous case, the 6LN will insert an RPI (RPI_1)
                          header which MUST be in an IPv6-in-IPv6 header addressed to
                          the root so that the 6LBR can remove this RPI.
                          The 6LBR will then insert an RH3 inside a new IPv6-in-IPv6
                          header addressed to the 6LN destination node. The RPI is optional from 6LBR to 6LR_id (RPI_2).
                        </t>

                                       <texttable title="Non Storing: Summary of the use of headers from RPL-aware-leaf to not-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <c> Inserted headers</c>
                                          <c> IPv6-in-IPv6 (RPI1) </c>
                                          <c> -- </c>
                                          <c>  IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI_1) </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI_1) </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> opt RPI_2 </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from not-RPL-aware-leaf to RPL-aware-leaf">

                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                         not-RPL-aware 6LN (IPv6) --> 6LR_ia --> root (6LBR) --> 6LR_id -->  6LN
                        </t>
                        <t>
                        For example, a communication flow could be: Node G --> Node E --> Node B --> Node A (root) --> Node B --> Node E --> Node H
                        </t>
                        <t>
                          6LR_ia are the intermediate routers from source to the root.
                          In this case, "1 &lt;= ia &lt;= n", n is the number of intermediate routers (6LR)
                        </t>
                        <t>
                          6LR_id are the intermediate routers from the root to the destination.
                          In this case, "1 &lt;= ia &lt;= m", m is the number of the
                          intermediate routers (6LR).
                        </t>
                        <t>
                          This scenario is mostly identical to the previous
                          one.  The RPI is added by the first 6LR (6LR_1) inside an
                          IPv6-in-IPv6 header addressed to the root.  The 6LBR will
                          remove this RPI, and add it's own IPv6-in-IPv6 header
                          containing an RH3 header and optional RPI (RPI_2).
                        </t>

                                <texttable title="Non Storing: Summary of the use of headers from not-RPL-aware-leaf to RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6</ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> 6LN</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI_1) </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2)</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI_1) </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
               </section>

               <section title="Non-SM: Example of Flow from not-RPL-aware-leaf to not-RPL-aware-leaf">

                        <t>
                        In this case the flow comprises:
                        </t>
                        <t>
                         not-RPL-aware 6LN (IPv6 src)--> 6LR_ia --> root (6LBR) --> 6LR_id --> not-RPL-aware (IPv6 dst)
                        </t>
                        <t>
                        For example, a communication flow could be: Node G --> Node E --> Node B --> Node A (root) --> Node C --> Node J
                        </t>
                        <t>
                          6LR_ia are the intermediate routers from source to the root.
                          In this case, "1 &lt;= ia &lt;= n", n is the number of intermediate routers (6LR)
                        </t>
                        <t>
                          6LR_id are the intermediate routers from the root to the destination.
                          In this case, "1 &lt;= ia &lt;= m", m is the number of the
                          intermediate routers (6LR).
                        </t>
                        <t>
                          This scenario is the combination of the previous two cases.
                        </t>
                                <texttable title="Non Storing: Summary of the use of headers from not-RPL-aware-leaf to not-RPL-aware-leaf">
                                          <ttcol> Header</ttcol>
                                          <ttcol> IPv6 src </ttcol>
                                          <ttcol> 6LR_1</ttcol>
                                          <ttcol> 6LBR</ttcol>
                                          <ttcol> 6LR_id</ttcol>
                                          <ttcol> IPv6 dst</ttcol>
                                          <c> Inserted headers</c>
                                          <c> -- </c>
                                          <c>  IPv6-in-IPv6 (RPI_1) </c>
                                          <c>  IPv6-in-IPv6 (RH3) </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Removed headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> IPv6-in-IPv6 (RPI_1) </c>
                                          <c> IPv6-in-IPv6 (RH3, opt RPI_2) </c>
                                          <c> -- </c>
                                          <c> Re-added headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Modified headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> Untouched headers</c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                                          <c> -- </c>
                        </texttable>
                       </section>
            </section>

          </section>

          <section title="Operational Considerations of supporting
                          not-RPL-aware-leaves" anchor="notrplaware">
            <t>
              Roughly half of the situations described in this document
              involve leaf ("host") nodes that do not speak RPL.  These nodes
              fall into two further categories: ones that drop a packet
              that have RPI or RH3 headers, and ones that continue to
              process a packet that has RPI and/or RH3 headers.
            </t>
            <t>
              <xref target="RFC8200" /> provides for new rules that suggest
              that nodes that have not been configured (explicitely) to
              examine Hop-by-Hop headers, should ignore those headers, and
              continue processing the packet.  Despite this, and despite the
              switch from 0x63 to 0x23, there may be hosts that are pre-RFC8200,
              or simply intolerant.  Those hosts will drop packets that
              continue to have RPL artifacts in them.  In general, such
              hosts can not be easily supported in RPL LLNs.
            </t>
            <t>
              There are some specific cases where it is possible to remove
              the RPL artifacts prior to forwarding the packet to the leaf
              host.  The critical thing is that the artifacts have been
              inserted by the RPL root inside an IPv6-in-IPv6 header, and
              that the header has been addressed to the 6LR immediately prior
              to the leaf node. In that case, in the process of removing the
              IPv6-in-IPv6 header, the artifacts can also be removed.
            </t>
            <t>
              The above case occurs whenever traffic originates from the
              outside the LLN (the "Internet" cases above), and non-storing
              mode is used.  In non-storing mode, the RPL root knows the
              exact topology (as it must be create the RH3 header), and
              therefore knows what the 6LR prior to the leaf --- the 6LR_n.
            </t>
            <t>
              Traffic originating from the RPL root (such as when the data
              collection system is co-locate on the RPL root), does not
              require an IPv6-in-IPv6 header (in either mode), as the packet
              is originating at the root, and the root can insert the RPI
              and RH3 headers directly into the packet, as it is formed.
              Such a packet is slightly smaller, but only can be sent to
              nodes (whether RPL aware or not), that will tolerate the
              RPL artifacts.
            </t>
            <t>
              An operator that finds itself with a lot of traffic from the
              RPL root to RPL-not-aware-leaves, will have to do IPv6-in-IPv6
              encapsulation if the leaf is not tolerant of the RPL artifacts.
              Such an operator could otherwise omit this unnecessary header
              if it was certain of the properties of the leaf.
            </t>
            <t>
              As storing mode can not know the final path of the traffic,
              intolerant (that drop packets with RPL artifacts) leaf nodes
              can not be supported.
            </t>
          </section>

       <section title="Operational considerations of introducing 0x23">
         <t>
           This section describes the operational considerations
         </t>
         <section title="Has deployment been discussed?">
          <t>
<!--        Without the modifications in 2460 bis, we would have in the completely general storing case, which includes not-RPL
            aware leaf nodes, it is not possible for a sending node to know
            if the destination is RPL aware, and therefore it must always use
            hop-by-hop IPv6-in-IPv6 encapsulation, and it can never omit the IPv6-in-IPv6
            encapsulation.  See table <xref target="table_storing" />
          </t>
-->

          There are no known multivendor deployments outside of the research groups! All known deployments of RPL are in market verticals,
          with a single vendor providing all components.
          Research groups typically are using Contiki, RiotOS, or OpenWSN., and these are easily adapted to 0x23 functionality.
          Compatibility issue of RPL Option type not seems to be quite
          relevant for research groups.
          </t>

         </section>
         <section title="Has installation and initial setup been discussed??">
           <!-- -->
           <t>
             During bootstrapping the node get the DIO with the information of RPL Option Type and Indicating
             the new RPI in the DODAG Configuration Option Flag.
             The DODAG root is in charge to configure the current network to the new value gradually, through DIO
             messages and when all the nodes are set with the new value. The dodag should change to a new DODAG version.
             Not able to send data plane mssges. Should drop the packet.
             In case of rebooting, the node does not remember the RPL Option Type.
             Thus, the DIO is sent with flag indicating the new RPI value.
           </t>
         </section>
         <section title="Has the migration path been discussed?">
<!-- -->

         </section>
         <section title="Have the Requirements on other protocols and
                         functional components been discussed?">
           <t>
             It allows to send packets to non-RPL nodes, the 20x3  (XXX 0x23?)
           </t>
         </section>
         <section title="Has the impact on network operation been discussed?">
           <t>
             Missconfiguration in case that a node join
           </t>
         </section>
        <section title="Have suggestions for verifying correct operation been discussed?">

        </section>
        <section title="Has management interoperability been discussed?">

        </section>
        <section title="Are there fault or threshold conditions that should be reported?">

        </section>
        <section title="Is configuration discussed?">

        </section>
      </section>


        <section title="IANA Considerations">
           <t>
             This document updates the registration made in <xref target="RFC6553"/>
             Destination Options and Hop-by-Hop Options registry from 0x63 to 0x23.
           </t>
           <t>
           [RFCXXXX] represents this document.
           </t>
           <t>
           <figure title="Option Type in RPL Option." anchor="fig_IanaRPIOption" align="center">
              <artwork> <![CDATA[

Hex Value  Binary Value
           act  chg  rest     Description              Reference
---------  ---  ---  -------  -----------------       ----------
 0x23      00    1   00011   RPL Option                [RFCXXXX]
 0x63      01    1   00011   RPL Option(DEPRECATED) [RFC6553][RFCXXXX]

           ]]></artwork></figure>
           </t>
           <t>
           The DODAG Configuration Option Flags in the DODAG Configuration
           option is updated as follows:
           </t>
           <t>
          <figure title="DODAG Configuration Option Flag to indicate the RPI-flag-day." anchor="fig_RPIflagdayConfOption" align="center">
            <artwork> <![CDATA[

              +------------+-----------------+---------------+
              | Bit number |   Description   |   Reference   |
              +------------+-----------------+---------------+
              |      3     | RPI 0x23 enable | This document |
              +------------+-----------------+---------------+

           ]]></artwork></figure>
           </t>
        </section>

        <section anchor="Security" title="Security Considerations">
           <t>
             The security considerations covered in <xref target="RFC6553"/> and
             <xref target="RFC6554"/> apply when the packets get into RPL
             Domain.
          </t>
          <t>
            The IPv6-in-IPv6 mechanism described in this document is much more
            limited than the general mechanism described in <xref
            target="RFC2473"/>.  The willingness of each node in the LLN to
            decapsulate packets and forward them could be exploited by nodes to
            disguise the origin of an attack.
          </t>

          <t>
            Nodes within the LLN can use the IPv6-in-IPv6 mechanism to mount an
            attack on another part of the LLN, while disguising the origin of
            the attack.  The mechanism can even be abused to make it appear
            that the attack is coming from outside the LLN, and unless
            countered, this could be used to mount a Distributed Denial Of
            Service attack upon nodes elsewhere in the Internet. See <xref
            target="DDOS-KREBS" /> for an example of such attacks already
            seen in the real world.
          </t>

          <t>
            Nodes outside of the LLN will need to pass IPv6-in-IPv6 traffic
            through the RPL root to perform this attack. To counter, the RPL
            root SHOULD either restrict ingress of IPv6-in-IPv6 packets (the
            simpler solution), or it SHOULD do a deep packet inspection
            wherein it walks the IP header extension chain until it can
            inspect the upper-layer-payload as described in <xref
            target="RFC7045" />.
            In particular, the RPL root SHOULD do BCP38 (<xref
            target="RFC2827" />) processing on the source addresses of all IP
            headers that it examines in both directions.
          </t>
          <t>
            Note: there are some situations where a prefix will spread
            across multiple LLNs via mechanisms such as the one described in
            <xref target="I-D.ietf-6lo-backbone-router" />.
            In this case the BCP38 filtering needs to take this into account,
            either by exchanging detailed routing information on each LLN,
            or by moving the BCP38 filtering further towards the Internet,
            so that the details of the multiple LLNs do not matter.
          </t>
          <t>
            While a typical LLN may be a very poor origin for attack traffic
            (as the networks tend to be very slow,
            and the nodes often have very low duty cycles) given enough
            nodes, they could still have a
            significant impact, particularly if the attack was on another LLN!
            Additionally, some uses of RPL involve large backbone ISP scale
            equipment <xref target="I-D.ietf-anima-autonomic-control-plane"/>,
            which may be equipped with multiple 100Gb/s interfaces.
          </t>
          <t>
            Blocking or careful filtering of IPv6-in-IPv6 traffic entering the LLN as
            described above will make sure that any attack that is mounted
            must originate from compromised nodes within the LLN.
            The use of BCP38 filtering at the RPL root on egress traffic will
            both alert the operator to the existence of the attack, as well
            as drop the attack traffic.  As the RPL network is typically
            numbered from a single prefix, which is itself assigned by RPL,
            BCP38 filtering involves a single prefix comparison and should be
            trivial to automatically configure.
          </t>
          <t>
            There are some scenarios where IPv6-in-IPv6 traffic SHOULD be allowed to
            pass through the RPL root, such as the IPv6-in-IPv6 mediated
            communications between a new Pledge and the Join
            Registrar/Coordinator (JRC) when
            using <xref target="I-D.ietf-anima-bootstrapping-keyinfra" /> and
            <xref target="I-D.ietf-6tisch-dtsecurity-secure-join" />. This is
            the case for the RPL root to do careful filtering: it occurs only
            when the Join Coordinator is not co-located inside the RPL root.
          </t>

          <t>
            With the above precautions, an attack using IPv6-in-IPv6 tunnels will be
            by a node within the LLN on another node within the LLN.  Such an
            attack could, of course, be done directly.  An attack of this
            kind is meaningful only if the source addresses are either fake
            or if the point is to amplify return traffic.
            Such an attack, could also be done without the use of IPv6-in-IPv6
            headers using forged source addresses.
            If the attack requires bi-directional communication, then IPv6-in-IPv6
            provides no advantages.
          </t>
          <t>
            <xref target="RFC2473"/> suggests that tunnel entry and exit
            points can be secured, via the "Use IPsec". This solution has
            all the problems that <xref target="RFC5406" /> goes into.
            In an LLN such a solution would degenerate into every node having
            a tunnel with every other node.  It would provide a small amount
            of origin address authentication at a very high cost; doing BCP38
            at every node (linking layer-3 addresses to layer-2 addresses,
            and to already present layer-2 cryptographic mechanisms) would be
            cheaper should RPL be run in an environment where hostile nodes
            are likely to be a part of the LLN.
          </t>
          <t>
            The RH3 header usage described here can be abused in equivalent
            ways with an IPv6-in-IPv6 header to add the needed RH3
            header. As such, the attacker's RH3 header will not be seen by
            the network until it reaches the end host, which will decapsulate
            it.  An end-host SHOULD be suspicious about a RH3 header which
            has additional hops which have not yet been processed, and SHOULD
            ignore such a second RH3 header.
          </t>
          <t>
            In addition, the LLN will likely use <xref
            target="RFC8138" /> to compress the IPv6-in-IPv6
            and RH3 headers. As such, the compressor at the RPL-root will see
            the second RH3 header and MAY choose to discard the packet if the
            RH3 header has not been completely consumed.  A consumed (inert)
            RH3 header could be present in a packet that flows from one LLN,
            crosses the Internet, and enters another LLN.  As per the
            discussion in this document, such headers do not need to be
            removed.  However, there is no case described in this document
            where an RH3 is inserted in a non-storing network on traffic that
            is leaving the LLN, but this document SHOULD NOT preclude such a
            future innovation.  It should just be noted that an incoming RH3
            must be fully consumed, or very carefully inspected.
          </t>
          <t>
            The RPI header, if permitted to enter the LLN, could be used by
            an attacker to change the priority of a packet by selecting a
            different RPLInstanceID, perhaps one with a higher energy cost,
            for instance.  It could also be that not all nodes are reachable
            in an LLN using the default instanceID, but a change of
            instanceID would permit an attacker to bypass such filtering.
            Like the RH3, an RPI header is to be inserted by the RPL root on
            traffic entering the LLN by first inserting an IPv6-in-IPv6 header. The
            attacker's RPI header therefore will not be seen by the network.
            Upon reaching the destination node the RPI header has no further
            meaning and is just skipped; the presence of a second RPI header
            will have no meaning to the end node as the packet has already
            been identified as being at it's final destination.
          </t>
          <t>
            The RH3 and RPI headers could be abused by an attacker inside of
            the network to route packets on non-obvious ways, perhaps eluding
            observation.   This usage is in fact part of
            <xref target="RFC6997" /> and can not be restricted at all. This
            is a feature, not a bug.
          </t>
          <t>
            <xref target="RFC7416"/> deals with many other threats to LLNs
            not directly related to the use of IPv6-in-IPv6 headers, and this
            document does not change that analysis.
          </t>

        </section>

        <section anchor="Acknowledgments" title="Acknowledgments">
           <t>
           This work is partially funded by the FP7 Marie Curie Initial Training
           Network (ITN) METRICS project (grant agreement No.  607728).
           </t>
           <t>
            A special BIG thanks to C. M. Heard for the help with the <xref target="updateRFCs_section" />.
            Much of the redaction in that section is based on his comments.
           </t>
           <t>
           Additionally, the authors would like to acknowledge the review, feedback, and
           comments of (alphabetical order): Robert Cragie, Simon Duquennoy, Ralph Droms,
           Cenk GÃ¼ndogan, Rahul Jadhav, Matthias Kovatsch, Peter van der Stok,
           Xavier Vilajosana and Thomas Watteyne.
           </t>
         </section>


       </middle>

 <back>

   <references title="Normative References">


     <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

     &RFC6553;
     &RFC6554;
     &RFC2119;

     <?ref include="reference.RFC.8174" ?>
    <!-- <?rfc include="reference.RFC.8200" ?>-->
     <?ref include="reference.RFC.8200" ?>
     <?rfc include="reference.RFC.8138" ?>

     &RFC6550;


     <?rfc include="reference.RFC.2827" ?>

     <?rfc include="reference.RFC.7045" ?>
    <?rfc include="reference.I-D.thubert-roll-unaware-leaves" ?>
   </references>

   <references title="Informative References">
   <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

     &RFC6775;
     &RFC7416;
     &RFC4443;
     &RFC7102;
     &RFC8180;
     &RFC2473;
     <?rfc include="reference.I-D.ietf-anima-autonomic-control-plane" ?>
     <?rfc include="reference.RFC.5406" ?>
    <!-- <?rfc include="reference.I-D.ietf-6tisch-architecture" ?> -->
     <?rfc include="reference.I-D.ietf-anima-bootstrapping-keyinfra" ?>
     <?rfc include="reference.I-D.ietf-6tisch-dtsecurity-secure-join" ?>
     <?rfc include="reference.I-D.ietf-6lo-backbone-router" ?>
  <!--   <?rfc include="reference.I-D.ietf-roll-dao-projection" ?> -->
     <?rfc include="reference.I-D.ietf-6man-rfc6434-bis" ?>

     <?rfc include="reference.RFC.6997" ?>
     <?rfc include="reference.RFC.4192" ?>

     <reference anchor="DDOS-KREBS" target="http://arstechnica.com/security/2016/09/botnet-of-145k-cameras-reportedly-deliver-internets-biggest-ddos-ever/">
       <front>
	 <title>Record-breaking DDoS reportedly delivered by >145k hacked cameras</title>
         <author initials="D." surname="Goodin"> <organization></organization> </author>
	 <date year="2016" month="September"/>
       </front>
     </reference>

     </references>


   <!-- Change Log
v00 2011-03-07  BPa  Initial version

     -->
 </back>
</rfc>
<!--
    Local Variables:
    mode: xml
    End:
-->
